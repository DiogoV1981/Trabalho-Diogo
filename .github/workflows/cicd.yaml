name: Pipeline CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  cicd:

    runs-on: ubuntu-latest

    steps:
      - name: Obter repositório
        uses: actions/checkout@v3

      - name: Configurar Docker
        uses: docker/setup-buildx-action@v2

      - name: Iniciar serviços
        run: docker compose up -d

      - name: Esperar inicialização dos serviços
        run: sleep 10

      - name: Validar se a FastAPI está rodando antes dos testes
        run: curl --fail http://localhost:5003/docs || exit 1

      - name: Validar acesso ao MLflow antes dos testes
        run: curl --fail http://mlflow-tracking-server:5000 || exit 1

      - name: Criar ambiente para executar testes com o conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: conda.yaml
          activate-environment: OML
          
      - name: Atualizar dependências para evitar conflitos no CI/CD
        run: |
          conda run --no-capture-output -n OML pip install --force mlflow==2.20.3 cloudpickle==3.1.1

      - name: Executar testes
        run: conda run --no-capture-output -n OML pytest

      - name: Iniciar sessão no repositório do GitHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Enviar imagem MLflow Tracking para o repositório do GitHub
        run: docker push ghcr.io/diogov1981/mlflow-tracking:latest

      - name: Enviar imagem FastAPI para o repositório do GitHub
        run: docker push ghcr.io/diogov1981/fastapi-application:latest